{"ast":null,"code":"var _jsxFileName = \"/home/mishkatonik/Documents/kickstart/UFO React Componentized/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport NavBar from './components/NavBar/NavBar.js';\nimport GraphContainer from './components/GraphContainer/GraphContainer.js';\nimport StateCheckboxContainer from './components/StateCheckboxContainer/StateCheckboxContainer.js';\nimport CheckboxItem from './components/StateCheckboxContainer/CheckboxItem.js';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      availableStates: [{\n        \"state\": \"ak\",\n        \"sightings\": 319\n      }, {\n        \"state\": \"al\",\n        \"sightings\": 642\n      }, {\n        \"state\": \"ar\",\n        \"sightings\": 588\n      }],\n      selectedStates: []\n    };\n\n    this.componentDidMount = () => {\n      fetch(\"sightings-by-state.json\").then(response => response.json()).then(jsonData => {\n        console.log(jsonData);\n        this.setState({\n          availableStates: jsonData\n        });\n      });\n    };\n\n    this.onStateSelect = index => {\n      console.log('getting state selection...'); // copy both arrays for manipulation\n\n      const availableStates = this.state.availableStates.slice();\n      const selectedStates = this.state.selectedStates.slice(); //indicate which state is being selected\n\n      const desiredState = this.state.availableStates[index]; // check if the desiredState is already selected\n\n      if (selectedStates.indexOf(desiredState) > -1) {\n        return;\n      } else {\n        // add the state to selected\n        selectedStates.push(desiredState); // update state and re-render\n\n        this.setState({\n          availableStates: availableStates,\n          selectedStates: selectedStates\n        });\n      }\n    };\n\n    this.removeStateSelect = index => {\n      console.log('removing state from selection...'); // copy both arrays for manipulation\n\n      const availableStates = this.state.availableStates.slice();\n      const selectedStates = this.state.selectedStates.slice();\n      const selectedIndex = selectedStates.findIndex(stateInfo => stateInfo.state === availableStates[index].state); //indicate which state is being removed\n\n      const desiredState = this.state.availableStates[index]; //remove the state from selected\n\n      selectedStates.splice(selectedIndex, 1); // update state and re-render\n\n      this.setState({\n        availableStates: availableStates,\n        selectedStates: selectedStates\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(StateCheckboxContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, this.state.availableStates.map((stateInfo, index) => React.createElement(CheckboxItem, {\n      selectedState: stateInfo.state,\n      onClick: () => {\n        this.state.selectedStates.indexOf(stateInfo) > -1 ? this.removeStateSelect(index) : this.onStateSelect(index);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, stateInfo.state))), React.createElement(\"div\", {\n      className: \"graphContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, this.state.selectedStates.map(stateInfo => React.createElement(\"div\", {\n      className: \"Bar\",\n      style: {\n        height: stateInfo.sightings / 22 + \"px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, stateInfo.state, \" - \", stateInfo.sightings))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mishkatonik/Documents/kickstart/UFO React Componentized/src/App.js"],"names":["React","Component","NavBar","GraphContainer","StateCheckboxContainer","CheckboxItem","App","state","availableStates","selectedStates","componentDidMount","fetch","then","response","json","jsonData","console","log","setState","onStateSelect","index","slice","desiredState","indexOf","push","removeStateSelect","selectedIndex","findIndex","stateInfo","splice","render","map","height","sightings"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport NavBar from './components/NavBar/NavBar.js';\nimport GraphContainer from './components/GraphContainer/GraphContainer.js';\nimport StateCheckboxContainer from './components/StateCheckboxContainer/StateCheckboxContainer.js';\nimport CheckboxItem from './components/StateCheckboxContainer/CheckboxItem.js';\n\n\nclass App extends Component {\n  state = {\n    availableStates: \n      [\n        {\n          \"state\": \"ak\",\n          \"sightings\": 319\n        },\n        {\n          \"state\": \"al\",\n          \"sightings\": 642\n        },\n        {\n          \"state\": \"ar\",\n          \"sightings\": 588\n        }\n      ],\n    selectedStates: [],\n  }\n\n  componentDidMount = () => {\n    fetch(\"sightings-by-state.json\")\n    .then(response => response.json())\n    .then(jsonData => {\n      console.log(jsonData);\n      this.setState({\n        availableStates: jsonData\n      })\n    });\n  }\n\n\n  onStateSelect = (index) => {\n    console.log('getting state selection...');\n\n    // copy both arrays for manipulation\n    const availableStates = this.state.availableStates.slice();\n    const selectedStates = this.state.selectedStates.slice();\n\n    //indicate which state is being selected\n    const desiredState = this.state.availableStates[index];\n\n    // check if the desiredState is already selected\n    if (selectedStates.indexOf(desiredState) > -1) {\n      \n      return;\n\n    } else {\n      \n      // add the state to selected\n      selectedStates.push(desiredState);\n      \n      // update state and re-render\n      this.setState({\n        availableStates: availableStates,\n        selectedStates: selectedStates,\n      }); \n    } \n  }\n\n\n  removeStateSelect = (index) => {\n    console.log('removing state from selection...')\n\n    // copy both arrays for manipulation\n    const availableStates = this.state.availableStates.slice();\n    const selectedStates = this.state.selectedStates.slice();\n    \n    const selectedIndex = selectedStates.findIndex(stateInfo => stateInfo.state === availableStates[index].state);\n\n    //indicate which state is being removed\n    const desiredState = this.state.availableStates[index];\n    \n    //remove the state from selected\n    selectedStates.splice(selectedIndex, 1);\n        \n    // update state and re-render\n    this.setState({\n      availableStates: availableStates,\n      selectedStates: selectedStates,\n    });\n  }\n\n\n\n\n  render() {\n    \n    return (\n      <div>\n\n        <NavBar />\n\n\n        <StateCheckboxContainer>\n          {\n            this.state.availableStates.map((stateInfo, index) => (\n                <CheckboxItem\n                  selectedState={stateInfo.state}\n                  onClick={() => {\n                    this.state.selectedStates.indexOf(stateInfo) > -1 \n                      ? this.removeStateSelect(index)\n                      : this.onStateSelect(index)\n                      }\n                    }\n                >\n                  {stateInfo.state}\n                </CheckboxItem>\n            ))\n          }\n\n        </StateCheckboxContainer>\n\n        <div className=\"graphContainer\">\n          \n          {\n            this.state.selectedStates.map(stateInfo => (\n              <div className=\"Bar\" style={{height: (stateInfo.sightings/22) + \"px\"}}>\n                {stateInfo.state} - {stateInfo.sightings}\n              </div>\n            ))\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}